name: pytest linux

on: [push, pull_request]

env:
  LD_LIBRARY_PATH: /opt/senzing/er/lib
  PYTHONPATH: /home/runner/work/sz-sdk-python-core/sz-sdk-python-core/src
  SENZING_TOOLS_DATABASE_URL: sqlite3://na:na@nowhere/tmp/sqlite/G2C.db

permissions:
  contents: read

jobs:
  pytest-linux:
    name: "pytest OS: ${{ matrix.os }}; Python ${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        senzingsdk-version: [staging-v4]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m venv ./venv
          source ./venv/bin/activate
          echo "PATH=${PATH}" >> "${GITHUB_ENV}"
          python -m pip install --upgrade pip
          python -m pip install --requirement requirements.txt
          python -m pip install psutil pytest pytest-cov pytest-schema

      - if: matrix.python-version == '3.8' || matrix.python-version == '3.9' || matrix.python-version == '3.10'
        name: Install python libraries for python 3.8, 3.9, and 3.10
        run: |
          source ./venv/bin/activate
          python -m pip install typing_extensions

      - name: Install Senzing SDK
        uses: senzing-factory/github-action-install-senzing-sdk@v1
        with:
          senzingsdk-repository-package: ${{ secrets.SENZING_APT_BETA_STAGING_REPOSITORY_PACKAGE }}
          senzingsdk-repository-path: ${{ secrets.SENZING_APT_BETA_STAGING_REPOSITORY_URL }}

      - name: Copy /etc files
        run: |
          sudo mkdir -p /etc/opt/senzing
          sudo cp testdata/senzing-license/g2.lic /etc/opt/senzing/g2.lic

      - name: Copy test database files
        run: |
          mkdir /tmp/sqlite
          cp testdata/sqlite/G2C.db /tmp/sqlite/G2C.db

      - name: Run pytest on tests
        run: |
          source ./venv/bin/activate
          pytest tests/ --verbose --capture=no --cov=src --cov-append

      # - name: Run unittest on examples
      #   run: |
      #     source ./venv/bin/activate
      #     python3 -m unittest \
      #       examples/szconfig/*.py \
      #       examples/szconfigmanager/*.py \
      #       examples/szdiagnostic/*.py \
      #       examples/szengine/*.py \
      #       examples/szproduct/*.py \
      #       examples/misc/*.py \
      #       || true

      # Use pytest to check examples, there are no "test" classes/functions, pytest imports the
      # .py files, if there is an error in examples catches and raises similar to using unittest
      # || true is to exit with code 0
      # || if [ $? -eq 5 ]; then echo "exit code = 5"; true; else echo "exit code = $?"; false; fi
      # if [ $exit_code -eq 5 ]; then exit 0; else exit "$exit_code"; fi
      - name: Run pytest on examples
        id: pytest-examples
        run: |
          source ./venv/bin/activate
          set +e
          pytest examples/szconfig/ \
            examples/szconfigmanager/ \
            examples/szdiagnostic/ \
            examples/szengine/ \
            examples/szproduct/ \
            examples/misc/ \
            --capture=no \
            -o python_files=*.py --ignore=examples/szengine/a_header_szengine.py --maxfail=1 \
            --verbose
          exitcode="$?"
          echo "exit code=$exitcode" >> "$GITHUB_OUTPUT"

      - name: Debug print
        run: |
          echo "pytest-examples exitcode: ${{ steps.pytest-examples.outputs.exitcode }}"

      - name: Rename coverage file
        env:
          COVERAGE_FILE: "coverage.${{ matrix.python-version }}"
        run: |
          mv .coverage "$COVERAGE_FILE"

      - name: Store coverage file
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.${{ matrix.python-version }}

  coverage:
    name: Coverage
    needs: pytest-linux
    permissions:
      pull-requests: write
      contents: write
    uses: senzing-factory/build-resources/.github/workflows/python-coverage-comment.yaml@v2
